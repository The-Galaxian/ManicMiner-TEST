name: Build Manic Miner

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up libs
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev appstream wget fuse ibpipewire-0.3-dev libfuse2
    - name: Build SDL library
      run: |
        SDL_RELEASE_TAG=release-2.30.2
        SDL_SHARED_LIBRARY=libSDL2-2.0.so.0.3000.2
        if [ ! -f external/SDL/build/${SDL_SHARED_LIBRARY} ]; then
         echo "Building the SDL library..."
         git clone https://github.com/libsdl-org/SDL.git
         cd SDL
         git checkout $SDL_RELEASE_TAG
         mkdir build
         cd build
         cmake -DCMAKE_BUILD_TYPE=Release -S .. -B .
         if [ $(grep PKG_PIPEWIRE_VERSION:INTERNAL= CMakeCache.txt) = "PKG_PIPEWIRE_VERSION:INTERNAL=" ]; then
          echo "The SDL library is not configured with PipeWire support, aborting. Check this?"
          exit 1
         fi
        make -j4
        else
           echo "The SDL library has already been built, skipping this step"
        fi

    - name: Build Manic Miner
      run: |
        make

    - name: Download AppImage tool
      run: |
        wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool
        
    - name: Download linuxdeploy
      run: |
        if [ ! -f linuxdeploy-x86_64.AppImage ]; then
          wget "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
        fi
        chmod a+x linuxdeploy-x86_64.AppImage

    - name: Package Manic Miner into AppImage
      run: |
       mkdir -p AppDir/usr/bin
       mkdir -p AppDir/usr/lib
       mkdir -p AppDir/usr/share/applications
       echo -e '[Desktop Entry]\nName=Manic Miner\nExec=manicminer\nIcon=manicminer\nType=Application\nCategories=Game;' > AppDir/usr/share/applications/manicminer.desktop
       ln -s usr/bin/manicminer AppDir/AppRun
       ln -s usr/bin/manicminer
       cp SDL/build/libSDL2-2.0.so.0 AppDir/usr/lib/libSDL2-2.0.so.0
       cp manicminer AppDir/usr/bin/
       chmod +x AppDir/AppRun

       # Generate the AppImage
       ./appimagetool AppDir manicminer.AppImage

    - name: Upload AppImage artifact
      uses: actions/upload-artifact@v3
      with:
        name: manicminer.AppImage
        path: manicminer.AppImage
